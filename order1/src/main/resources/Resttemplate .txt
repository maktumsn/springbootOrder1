public Orders addOrders(Orders orders)
    {
//        if (orders.getPickupdate()==null || orders.getPickupdate()==null)
//            throw new InvalidOrderFormat("Pickup time and date are mandatory fields.");
//        RestTemplate restTemplate =new RestTemplate();
//        Customer[] l= restTemplate.getForObject("http://localhost:8100/customers",Customer[].class);
//        for(Customer i:l)
//        {
//            if(orders.getCustomerid()==i.getCustomerid())
//            {
//                Orders savedCustomerOrder = repository.save(orders);
//                return savedCustomerOrder;
//            }
//
//        }
//        throw new CustomerNotFoundException("Customer Not Found");
        RestTemplate restTemplate =new RestTemplate();
        String url= "http://localhost:8100/customers";
        RequestCallback requestCallback = request -> request.getHeaders().
                setAccept(Arrays.asList(MediaType.APPLICATION_OCTET_STREAM, MediaType.ALL));
        ResponseExtractor<Void> responseExtractor = response -> {
            Path path = Paths.get("storing.json");
            Files.copy(response.getBody(), path, StandardCopyOption.REPLACE_EXISTING);
            System.out.println(response.getClass());
            return null;
        };
        restTemplate.execute(url, HttpMethod.GET, requestCallback, responseExtractor);
        ObjectMapper objectMapper = new ObjectMapper();
      //  objectMapper.enable(DeserializationFeature.ACCEPT_SINGLE_VALUE_AS_ARRAY);

        try {

            Data data = objectMapper.readValue(new File("storing.json"),
                    new TypeReference<Data>() {});
            CustomerResponse customerResponse=data.getData();
            List<Customers> customers= customerResponse.getCustomers();

            for (Customers customer : customers) {
                if (orders.getCustomerid() == customer.getCustomerid()) {
                    Orders savedCustomerOrder = repository.save(orders);
                    return savedCustomerOrder;
                }

            }
            return null;
        }
        catch (IOException e) {
            System.out.println(e);

        }

        return null;

    }
